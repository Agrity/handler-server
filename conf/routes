# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Reset Database
GET     /reset                                controllers.Application.reset()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                         controllers.Assets.versioned(path="/public", file: Asset)


# ============================= API Responses =================================================== #

GET     /                                               controllers.Application.home()

OPTIONS /*path                                          controllers.Application.options(path: String)

# ========== Admin Handler ========== #


GET     /admin/handlers                                 controllers.AdminHandlerController.getAllHandlers()

POST    /admin/handlers                                 controllers.AdminHandlerController.createHandler()

GET     /admin/handlers/:id                             controllers.AdminHandlerController.getHandler(id: Long)

GET     /admin/handlers/:id/growers                     controllers.AdminHandlerController.getAllGrowers(id: Long)

GET     /admin/handlers/:id/growers/:growerId           controllers.AdminHandlerController.getGrower(id: Long, growerId: Long)

GET     /admin/handlers/:id/bids                      controllers.AdminHandlerBidController.getAllHandlerBids(id: Long)

# ========== Admin Trader ========== #

GET      /admin/traders                                 controllers.AdminTraderController.getAllTraders()

POST     /admin/traders                                 controllers.AdminTraderController.createTrader()

GET      /admin/traders/:id                             controllers.AdminTraderController.getTrader(id: Long)


# ========== Admin Grower ========== #


GET     /admin/growers                                  controllers.AdminGrowerController.getAllGrowers()

POST    /admin/growers                                  controllers.AdminGrowerController.createGrower()

DELETE  /admin/growers/:id                              controllers.AdminGrowerController.deleteGrower(id: Long)

PUT     /admin/growers/:id                              controllers.AdminGrowerController.updateGrower(id: Long)

GET     /admin/growers/:id                              controllers.AdminGrowerController.getGrower(id: Long)

GET     /admin/growers/:id/bids                       controllers.AdminHandlerBidController.getAllGrowerBids(id: Long)


# ========== Admin HandlerBid ========== #


GET     /admin/bids                                   controllers.AdminHandlerBidController.getAllBids()

POST    /admin/bids                                   controllers.AdminHandlerBidController.createBid()

DELETE  /admin/bids/:id                               controllers.AdminHandlerBidController.deleteBid(id: Long)

PUT     /admin/bids/:id                               controllers.AdminHandlerBidController.updateBid(id: Long)

GET     /admin/bids/:id                               controllers.AdminHandlerBidController.getBid(id: Long)

GET     /admin/bids/:id/send                          controllers.AdminHandlerBidController.sendBid(id: Long)

GET     /admin/bids/:bidId/accept/:growerId         controllers.AdminHandlerBidController.acceptBid(bidId: Long, growerId: Long)

GET     /admin/bids/:bidId/reject/:growerId         controllers.AdminHandlerBidController.rejectBid(bidId: Long, growerId: Long)

GET     /admin/bids/:bidId/requestcall/:growerId    controllers.AdminHandlerBidController.requestCall(bidId: Long, growerId: Long)


# ========== Authentication ========== #


POST    /handler/login                                    controllers.security.HandlerSecurityController.login()

POST    /handler/logout                                   controllers.security.HandlerSecurityController.logout()


# ========== Handler User ========== #


GET     /handler                                 controllers.HandlerController.getHandler()

GET     /handler/growers                         controllers.HandlerController.getAllGrowers()

POST    /handler/growers                         controllers.HandlerController.createGrower()

GET     /handler/growers/:growerId               controllers.HandlerController.getGrower(growerId: Long)

DELETE  /handler/growers/:growerId               controllers.HandlerController.deleteGrower(growerId: Long)

PUT     /handler/growers/:growerId               controllers.HandlerController.updateGrower(growerId: Long)

GET     /handler/bids/:id/send                 controllers.HandlerController.sendBid(id: Long)

GET     /handler/growers/:growerId/bids        controllers.HandlerController.getGrowersBids(growerId: Long)

GET     /handler/bids                          controllers.HandlerController.getAllBids()

POST    /handler/bids                          controllers.HandlerController.createBid()

DELETE  /handler/bids/:bidId                 controllers.HandlerController.deleteBid(bidId: Long)

PUT     /handler/bids/:bidId                 controllers.HandlerController.updateBid(bidId: Long) 

GET     /handler/bids/:bidId                 controllers.HandlerController.getBid(bidId: Long)


# ========== **TEMP** Response to Bid ========== #


GET     /bids/:bidId/accept/:growerId controllers.AdminHandlerBidController.acceptBid(bidId: Long, growerId: Long)

GET     /bids/:bidId/reject/:growerId         controllers.AdminHandlerBidController.rejectBid(bidId: Long, growerId: Long)

GET     /bids/:bidId/requestcall/:growerId    controllers.AdminHandlerBidController.requestCall(bidId: Long, growerId: Long)

GET     /bids/:bidId/partial/:growerId        controllers.BidController.displayPartialPage(offerId: Long, growerId: Long)

GET     /bids/:bidId/accept/:growerId/:pounds   controllers.BidController.acceptPartial(offerId: Long, growerId: Long, pounds: Long)


# ========== Message Recieving ========== #


GET     /messaging/response/twilio                controllers.MessageReceivingController.receiveTwilioResponse()

POST    /messaging/response/twilio                controllers.MessageReceivingController.receiveTwilioResponse()

GET     /messaging/response/twilio/number         controllers.MessageReceivingController.numberTwilioResponses()
